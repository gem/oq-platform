#!/usr/bin/env python
import time
import sys
import unittest

from openquakeplatform.test import pla
from openquakeplatform.test.utils import *

def general_information(owner, name, categ, struct_type, taxo_type,
                        taxo_text, taxo_gem_vis, type_ass, auth, art_tit,
                        conference, year, web_link, gen_comm, use_case):

    dom_owner = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                   "fieldset/div/div/select[@id='id_owner']")
    pla.select_item_set(dom_owner, "GEM")

    dom_name = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                  "fieldset/div/div/input[@id='id_name']")
    dom_name.send_keys(name)

    dom_categ = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                   "fieldset/div/div/select[@id='id_category']")
    pla.select_item_set(dom_categ, categ)

    dom_struct_type = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                   "fieldset/div/div/select[@id='id_structure_type']")
    pla.select_item_set(dom_struct_type, struct_type)

    dom_taxo_type = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                   "fieldset/div/div/select[@id='id_taxonomy_type']")
    pla.select_item_set(dom_taxo_type, taxo_type)

    dom_taxo_text = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                  "fieldset/div/div/input[@id='id_taxonomy_text_1']")
    dom_taxo_text.send_keys(taxo_text)

    dom_taxo_text_taxtweb = pla.xpath_finduniq("//form[@id='generalinformation_form']/div/"
                                  "fieldset/div/div/a[@id='id_taxonomy_text_taxtweb']")

    dom_taxo_text_taxtweb.click()

class VulnerabilityTest(unittest.TestCase):
    def jasmine_test(self):
        # go to test page
        pla.get('/static/jasmine/vulnerabilityTests.html')

        # wait DOM population via async JS
        pla.xpath_finduniq(
            "//div[@class='jasmine_html-reporter']/div"
            "[@class='results']/div[@class='summary']",
            100, 0.1)

        # check the result of tests
        result = pla.xpath_finduniq(
            "//span[@class='bar passed' and contains"
            "(normalize-space(text()), '0 failures')]")

    def taxonomy_test(self):
        pla.get('/vulnerability/list')

        new_func_btn = pla.xpath_finduniq(
            "//li[@class='vuln_menu']/form[@action='/admin/vulnerability/generalinformation/add/']/button[@type='submit' and @value='New function']", 50, 0.1)

        new_func_btn.click()
        pla.wait_new_page(new_func_btn, '/admin/vulnerability/generalinformation/add/')

        general_information("GEM", "test function from selenium", "Structure specific", "Building", "GEM",
                            "CU+CIP", "taxo_gem_vis", "type_ass", "auth", "art_tit",
                            "conference", "year", "web_link", "gen_comm", "use_case")

        # taxtweb popup
        pla.select_window_by_name("TaxT")
        samedirect = pla.xpath_finduniq("//input[@id='DirectionCB']", 50, 0.1)
        samedirect.click()

        dir_y = pla.xpath_finduniq("//li[@id='sub1tab_id-2']")
        dir_y.click()

        material_y = pla.xpath_finduniq("//select[@id='MaterialCB12']")
        pla.select_item_set(material_y, "Steel")

        mat_tech_y = pla.xpath_finduniq("//select[@id='MaterialCB22']")
        pla.select_item_set(mat_tech_y, "Hot-rolled steel members")

        mat_prop_y = pla.xpath_finduniq("//select[@id='MaterialCB32']")
        pla.select_item_set(mat_prop_y, "Riveted connections")

        popform = pla.xpath_finduniq("//li[@id='id_populate_form']", 5, 2)
        popform.click()

        # close popup and return to main window
        pla.windows_reset()

        taxt_view = pla.xpath_finduniq("//input[@id='id_taxonomy_gem_view']", 5, 1)
        self.assertEqual(taxt_view.get_attribute('value'), u'DX/CU+CIP/DY/S+SR+RIV')

        outtype = pla.xpath_finduniq("//select[@id='OutTypeCB']")
        pla.select_item_set(outtype, "Full")

        taxt_view = pla.xpath_finduniq("//input[@id='id_taxonomy_gem_view']", 5, 1)
        self.assertEqual(taxt_view.get_attribute('value'),
                         u'DX+D99/CU+CIP/L99/DY+D99/S+SR+RIV/L99/H99/Y99/OC99/BP99/'
                         'PLF99/IR99/EW99/RSH99+RMT99+R99+RWC99/F99+FWC99/FOS99')

        # to be continue ...
