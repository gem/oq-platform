// Copyright (c) 2012-2013, GEM Foundation.

// This program is free software: you can redistribute it and/or modify
// under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

$ = django.jQuery;

var form_name = "generalinformation";

function update_limit_states_fields(indexed_name)
{
    var damage_scale_select_id = "#id_"+indexed_name+"damage_scale";
    var limit_states_desc_id = "#id_"+indexed_name+"limit_states_desc";
    var damage_scale;
    damage_scale = $(damage_scale_select_id + " option:selected").text();
    var assoc = {};
    assoc['MSK-76'] = {'desc': "D1;D2;D3;D4;D5"};
    assoc['EMS-98'] = {'desc': "Grade 1;Grade 2;Grade 3;Grade 4;Grade 5"};
    assoc['EMS-92'] = {'desc': "Negligible;Moderate;Substantial;Very heavy;Destruction"};
    assoc['HAZUS'] = {'desc': "Slight;Moderate;Extensive;Collapse"};
    assoc['ATC-13'] = {'desc': "Slight;Light;Moderate;Heavy;Major;Collapse"};
    if ($(limit_states_desc_id).length != 1) {
        alert("Unable to automatically update the description of limit states");
        return false;
    }
    if (damage_scale in assoc) {
        $(limit_states_desc_id)[0].value = assoc[damage_scale]['desc'];
        $(limit_states_desc_id)[0].readOnly = true;
    }
    else {
        $(limit_states_desc_id)[0].readOnly = false;
        $(limit_states_desc_id)[0].value = "";
    }
}

function _show_hide_item(full_name, is_enabled)
{
    if (is_enabled) {
        $( "div#"+full_name+"-group.inline-group" ).css('display', '');
    }
    else {
        $( "div#"+full_name+"-group.inline-group" ).css('display', 'none');
    }
}

function leaf_node_manager(anc_name, is_enabled, rel_name)
{
    var full_name;

    full_name = (anc_name.length > 0 ? anc_name + "-0-" : "" ) + rel_name;

    _show_hide_item(full_name, is_enabled);
    related_delete_mgr(anc_name, full_name, !is_enabled);
}

function fragility_func_manager(anc_name, is_enabled)
{
    var full_name, rel_name = "fragility_func";

    full_name = (anc_name.length > 0 ? anc_name + "-0-" : "" ) + rel_name;
    var indexed_name = full_name + "-0-";

    var damage_scale_select_id = "#id_"+indexed_name+"damage_scale";
    $(damage_scale_select_id).off('change');
    $(damage_scale_select_id).change(function () { update_limit_states_fields(indexed_name) });

    _show_hide_item(full_name, is_enabled);
    related_delete_mgr(anc_name, full_name, !is_enabled);

    var method_of_estimation;
    var select_id = "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation] option:selected";
    method_of_estimation = $(select_id).text();
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).off('change');
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).change(function () { fragility_func_manager(anc_name, is_enabled) });
    leaf_node_manager(full_name, method_of_estimation == "Analytical", "analytical_model_info");
    leaf_node_manager(full_name, method_of_estimation == "Empirical", "empirical_model_info");
    leaf_node_manager(full_name, method_of_estimation == "Analytical", "qrs_analytical");
    leaf_node_manager(full_name, method_of_estimation == "Empirical", "qrs_empirical");
    leaf_node_manager(full_name, (method_of_estimation == "Empirical" || method_of_estimation == "Analytical"), "stat_info");

    var func_distr_type;
    var select_id = "#"+form_name+"_form select[id=id_"+indexed_name+"func_distr_type] option:selected";
    func_distr_type = $(select_id).text();
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"func_distr_type]" ).off('change');
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"func_distr_type]" ).change(function () { fragility_func_manager(anc_name, is_enabled) });
    leaf_node_manager(full_name, func_distr_type == "Discrete", "func_distr_frag_discr");
    leaf_node_manager(full_name, func_distr_type == "Continuous", "func_distr_frag_cont");
}

function vulnerability_func_manager(anc_name, is_enabled)
{
    var full_name, rel_name = "vulnerability_func";

    full_name = (anc_name.length > 0 ? anc_name + "-0-" : "" ) + rel_name;
    var indexed_name = full_name + "-0-";

    _show_hide_item(full_name, is_enabled);
    related_delete_mgr(anc_name, full_name, !is_enabled);
    // sub_manager(full_name, is_enabled) ....

    var method_of_estimation;
    var select_id = "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation] option:selected";
    method_of_estimation = $(select_id).text();
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).off('change');
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).change(function () { vulnerability_func_manager(anc_name, is_enabled) });
    leaf_node_manager(full_name, method_of_estimation == "Analytical", "analytical_model_info");
    leaf_node_manager(full_name, method_of_estimation == "Empirical", "empirical_model_info");
    leaf_node_manager(full_name, method_of_estimation == "Analytical", "qrs_analytical");
    leaf_node_manager(full_name, method_of_estimation == "Empirical", "qrs_empirical");
    leaf_node_manager(full_name, (method_of_estimation == "Empirical" || method_of_estimation == "Analytical"), "stat_info");

    var func_distr_type;
    var select_id = "#"+form_name+"_form select[id=id_"+indexed_name+"func_distr_type] option:selected";
    func_distr_type = $(select_id).text();
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"func_distr_type]" ).off('change');
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"func_distr_type]" ).change(function () { vulnerability_func_manager(anc_name, is_enabled) });
    leaf_node_manager(full_name, func_distr_type == "Discrete", "func_distr_vuln_discr");
    leaf_node_manager(full_name, func_distr_type == "Continuous", "func_distr_vuln_cont");
}

function damage_to_loss_func_manager(anc_name, is_enabled)
{
    var full_name, rel_name = "damage_to_loss_func";

    full_name = (anc_name.length > 0 ? anc_name + "-0-" : "" ) + rel_name;
    var indexed_name = full_name + "-0-";

    var damage_scale_select_id = "#id_"+indexed_name+"damage_scale";
    $(damage_scale_select_id).off('change');
    $(damage_scale_select_id).change(function () { update_limit_states_fields(indexed_name) });

    _show_hide_item(full_name, is_enabled);
    related_delete_mgr(anc_name, full_name, !is_enabled);

    var method_of_estimation;
    var select_id = "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation] option:selected";
    method_of_estimation = $(select_id).text();
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).off('change');
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).change(function () { damage_to_loss_func_manager(anc_name, is_enabled) });
    leaf_node_manager(full_name, method_of_estimation == "Analytical", "analytical_model_info");
    leaf_node_manager(full_name, (method_of_estimation == "Empirical" || method_of_estimation == "Analytical"), "stat_info");
}

function capacity_curve_func_manager(anc_name, is_enabled)
{
    var full_name, rel_name = "capacity_curve_func";

    full_name = (anc_name.length > 0 ? anc_name + "-0-" : "" ) + rel_name;
    var indexed_name = full_name + "-0-";

    _show_hide_item(full_name, is_enabled);
    related_delete_mgr(anc_name, full_name, !is_enabled);

    var method_of_estimation;
    var select_id = "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation] option:selected";
    method_of_estimation = $(select_id).text();
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).off('change');
    $( "#"+form_name+"_form select[id=id_"+indexed_name+"method_of_estimation]" ).change(function () { capacity_curve_func_manager(anc_name, is_enabled) });
    leaf_node_manager(full_name, method_of_estimation == "Analytical", "cc_analytical_model_info");
    // NOTE: empirical is not yet implemented for capacity curves but could be in the future
    // leaf_node_manager(full_name, method_of_estimation == "Empirical", "cc_empirical_model_info");
    leaf_node_manager(full_name, (method_of_estimation == "Empirical" || method_of_estimation == "Analytical"), "stat_info");
}

function related_delete_mgr(anc_name, full_name, to_del)
{
    var el = $("#"+form_name+"_form input[id='id_"+full_name+"-0-DELETE']");

    // console.log("#"+form_name+"_form input[id='id_"+full_name+"-0-DELETE'], to_del="+(to_del ? "true" : "false"));
    // If the formfield has already been saved, it contains the DELETE checkbox, so we just need to check it
    if (el.length == 1) {
        if (to_del) {
            el.attr('checked','checked');
        }
        else {
            el.removeAttr('checked');
        }
    }
    // If the formfield has never been saved, we must clean it element by element
    // We only consider sub-formfields, i.e. those which ancestor is not empty
    else if (to_del && anc_name) {
        $("[id^=id_" + full_name + "-0-]").val('');
    }
}


function general_information_manager(is_enabled) {
    var type_of_assessment;

    type_of_assessment = $( "#"+form_name+"_form select[id=id_type_of_assessment] option:selected" ).text();
    $( "#"+form_name+"_form select[id=id_type_of_assessment]" ).off('change');
    $( "#"+form_name+"_form select[id=id_type_of_assessment]" ).change(function () { general_information_manager(true) });

    fragility_func_manager("", type_of_assessment == "Fragility");
    vulnerability_func_manager("", type_of_assessment == "Vulnerability");
    damage_to_loss_func_manager("", type_of_assessment == "Damage-to-loss");
    capacity_curve_func_manager("", type_of_assessment == "Capacity curve");
}

$(document).ready(function() {
    general_information_manager(true);
});
