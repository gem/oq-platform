# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright (c) 2010-2013, GEM Foundation.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public
#    License along with this program. If not, see
#    <https://www.gnu.org/licenses/agpl.html>.

from django.conf import settings

from django.conf.urls import patterns, include, url
from openquakeplatform.vulnerability import views

# Uncomment the next two lines to enable the admin:
from django.contrib import admin
admin.autodiscover()

urlpatterns = patterns(
    '',
    # Examples:
    # url(r'^$', '{{ project_name }}.views.home', name='home'),
    # url(r'^{{ project_name }}/', include('{{ project_name }}.foo.urls')),

    # Uncomment the admin/doc line below to enable admin documentation:
    # url(r'^admin/doc/', include('django.contrib.admindocs.urls')),

    url(r'^index$', views.index, name='index'),
    url(r'^list/$', views.list, name='list'),
    url(r'^view/(\d+)/$', views.show_general_information),
    url(r'^func-export-as-nrml/(\d+)/$', views.func_export_as_nrml),
    url(r'^data/(\d+)/$', views.general_information_json_get),
    url(r'^intensity_measure_csc$',
        views.IntensityMeasureCSC.as_view(),
        name='intensity_measure_csc'),
    url(r'^engineering_demand_csc$',
        views.EngineeringDemandCSC.as_view(),
        name='engineering_demand_csc'),
    url(r'^resp_var_par_csc$',
        views.RespVarParCSC.as_view(),
        name='resp_var_par_csc'),
    url(r'^resp_var_units_csc$',
        views.RespVarUnitsCSC.as_view(),
        name='resp_var_units_csc'),
    url(r'.*', RedirectView.as_view(url=reverse_lazy('list')), name='default')
)
