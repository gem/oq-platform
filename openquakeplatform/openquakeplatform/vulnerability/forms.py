from chained_selectbox.forms import ChainedChoicesForm
from django import forms
from django.forms import ModelForm
from chained_selectbox.form_fields import ChainedChoiceField

from django.forms.models import ChoiceField

from chained_multi_checkboxes.forms import ModelChainedMultipleChoiceField

from models import (PredictorVar,
                    CC_PredictorVar,
                    INTENSITY_MEASURE_TYPES,
                    ENGINEERING_DEMAND_PARAMETERS,
                    GeoApplicability,
                    Country,
                    REGIONS)


class PredictorVarForm(ChainedChoicesForm):
    class Meta:
        model = PredictorVar
    intensity_measure_type = forms.ChoiceField(
        choices=INTENSITY_MEASURE_TYPES)
    intensity_measure_unit = ChainedChoiceField(
        parent_field='intensity_measure_type',
        ajax_url='/vulnerability/intensity_measure_csc')


class CC_PredictorVarForm(ChainedChoicesForm):
    class Meta:
        model = CC_PredictorVar
    engineering_demand_par = forms.ChoiceField(
        choices=ENGINEERING_DEMAND_PARAMETERS)
    pred_var_units = ChainedChoiceField(
        parent_field='engineering_demand_par',
        ajax_url='/vulnerability/engineering_demand_csc', item_index=0)
    resp_var_par = ChainedChoiceField(
        parent_field='engineering_demand_par',
        ajax_url='/vulnerability/resp_var_par_csc', item_index=1)
    resp_var_units = ChainedChoiceField(
        parent_field='resp_var_par',
        ajax_url='/vulnerability/resp_var_units_csc')

    def __init__(self, *args, **kwargs):
        super(CC_PredictorVarForm, self).__init__(*args, **kwargs)
        self.fields['pred_var_val'].label = 'Predictor variable values'
        # ChainedChoicesForm is not working for attributes of custom and
        # chained fields
        self.fields['engineering_demand_par'].label = \
            'Engineering demand parameter'
        self.fields['pred_var_units'].label = 'Predictor variable units'
        self.fields['resp_var_par'].label = 'Response variable parameter'
        self.fields['resp_var_units'].label = 'Response variable units'


class GeoApplicabilityForm(ModelForm):
    class Meta:
        model = GeoApplicability
        # fields is required to impose the correct visualization order
        fields = ('region', 'countries', 'area', 'lat', 'lon', 'address')

    region = ChoiceField(choices=REGIONS)

    countries = ModelChainedMultipleChoiceField(
        parent_field='region',
        order_fields=('region', 'name'),
        queryset=Country.objects.all(),
        required=False)
