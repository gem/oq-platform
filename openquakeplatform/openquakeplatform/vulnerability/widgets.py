# Copyright (c) 2015, GEM Foundation.
#
# This program is free software: you can redistribute it and/or modify
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from django.utils.html import format_html
from django.utils.formats import localize_input
from django.forms.util import flatatt, force_text
from django.forms.widgets import Widget, MultiWidget, CheckboxInput, TextInput



class TaxonomyInput(MultiWidget):
    def __init__(self, attrs=None, help_text=""):
        widgets = [CheckboxInput(),
                   TextInput()]
        super(TaxonomyInput, self).__init__(widgets, attrs)

    def decompress(self, value):
        # value is None when the form is rendered for insert a new curve
        if value is None:
            return [ False, '' ]
        elif value == "":
            return [ True, '' ]
        else:
            return [ False, value ]

    def _format_value(self, value):
        if self.is_localized:
            return localize_input(value)
        return value

    def render(self, name, value, attrs=None):
        if isinstance(value, list):
            chbx = value[0]
            taxo = value[1]
        else:
            (chbx, taxo) = self.decompress(value)

        taxo_attrs = self.build_attrs(attrs, name=name + '_1', type='text' )
        taxo_attrs['id'] = 'id_' + name + '_1'

        chbx_attrs = { 'id': 'id_' + name + '_0', 'name': name + '_0',
                       'style': 'vertical-align: text-bottom;',
                       'type': 'checkbox' }
        if chbx:
            chbx_attrs['checked'] = ''

        # Only add the 'value' attribute if a value is non-empty.
        taxo_attrs['value'] = force_text(self._format_value(taxo))

        return format_html(u'<span style="vertical-align: text-bottom;">Any:</span> <input {0} type=\'checkbox\' onClick=\'if (this.checked) {{var nam = this.name.substr(0,this.name.length - 2) + "_1"; $("[name = " + nam + "]").val("");}}\'/> <input {1} onChange=\'$("[name=" + this.name.substr(0,this.name.length - 2) + "_0").prop("checked", this.value == ""); \'/>&nbsp;&nbsp;<a style=\'font-size: 16px; font-weight: bold;\' href="#" onClick="var pu_win = window.open(\'/taxtweb/{2}?is_popup=yes\', \'_blank\', \'scrollbars=no,resizable=yes, width=800,height=800,status=no,location=no,toolbar=no\');">TaxTweb</a>', flatatt(chbx_attrs), flatatt(taxo_attrs), force_text(self._format_value(taxo)))
