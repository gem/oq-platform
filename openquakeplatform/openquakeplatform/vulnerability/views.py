from django.http import HttpResponse

from django.http import Http404
from django.shortcuts import render_to_response
from models import GeneralInformation
from django.core import serializers


def index(request, **kwargs):
    print dir(kwargs)
    return HttpResponse("Hello world!")


def show_general_information(request, gen_info_id):
    try:
        #gi = GeneralInformation.objects.get(pk=gen_info_id)
        gi = GeneralInformation.objects.select_related().get(pk=gen_info_id)
        #gi = GeneralInformation.objects.filter(id=gen_info_id)
    except GeneralInformation.DoesNotExist:
        raise Http404
    print dir(gi)
    gi_json = serializers.serialize(
        "json",
        [gi],
        #indent=4,
        choices=True,
        relations={
            'fragility_func': {
                'choices': True,
                'relations': {
                    'analytical_model_info': {
                        'choices': True,
                        'relations': ('analysis_type', )
                    },
                    'empirical_model_info': {'choices': True},
                    'stat_info': {
                        'choices': True,
                        'relations': ('stat_model',
                                      'stat_model_fitting_method',
                                      'model_fitting_method_assumption',
                                      'fit_assessment_goodness',
                                      'proc_constr_conf_int',
                                      'proc_constr_pred_int', )
                    },
                    'predictor_var': {'choices': True},
                    'func_distr_frag_discr': {'choices': True},
                    'func_distr_frag_cont': {
                        'choices': True,
                        'relations': ('func_distr_shape', )
                    },
                    'engineering_demand_par': {'choices': True},
                    'qrs_analytical': {'choices': True},
                    'qrs_empirical': {'choices': True},
                },
            },
            'vulnerability_func': {
                'choices': True,
                'relations': {
                    'analytical_model_info': {
                        'choices': True,
                        'relations': ('analysis_type', )
                    },
                    'empirical_model_info': {'choices': True},
                    'stat_info': {
                        'choices': True,
                        'relations': ('stat_model',
                                      'stat_model_fitting_method',
                                      'model_fitting_method_assumption',
                                      'fit_assessment_goodness',
                                      'proc_constr_conf_int',
                                      'proc_constr_pred_int', )
                    },
                    'predictor_var': {'choices': True},
                    'func_distr_vuln_discr': {'choices': True},
                    'func_distr_vuln_cont': {
                        'choices': True,
                        'relations': ('func_distr_shape', )
                    },
                    'qrs_analytical': {'choices': True},
                    'qrs_empirical': {'choices': True},
                }
            },
            'damage_to_loss_func': {
                'choices': True,
                'relations': {
                    'analytical_model_info': {
                        'choices': True,
                        'relations': ('analysis_type', )
                    },
                    'empirical_model_info': {'choices': True},
                    'stat_info': {
                        'choices': True,
                        'relations': ('stat_model',
                                      'stat_model_fitting_method',
                                      'model_fitting_method_assumption',
                                      'fit_assessment_goodness',
                                      'proc_constr_conf_int',
                                      'proc_constr_pred_int', )
                    },
                    'func_distr_dtl_discr': {
                        'choices': True,
                        'relations': ('func_distr_shape', )
                    },
                }
            },
            'capacity_curve_func': {
                'choices': True,
                'relations': {
                    'analytical_model_info': {
                        'choices': True,
                        'relations': ('analysis_type', )
                    },
                    'empirical_model_info': {'choices': True},
                    'stat_info': {
                        'choices': True,
                        'relations': ('stat_model',
                                      'stat_model_fitting_method',
                                      'model_fitting_method_assumption',
                                      'fit_assessment_goodness',
                                      'proc_constr_conf_int',
                                      'proc_constr_pred_int', )
                    },
                    'cc_predictor_var': {
                        'choices': True,
                        'relations': ('engineering_demand_param', )
                    },
                }
            },
            'taxonomy_type': {'choices': True}
        })
    #return HttpResponse(gi_json)
    return render_to_response(
        'vulnerability/show_general_information.html',
        {'general_information': gi_json[1:-1]})  # remove the wrapping "[]"
