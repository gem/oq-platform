/*
   Copyright (c) 2014, GEM Foundation.

      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU Affero General Public License as
      published by the Free Software Foundation, either version 3 of the
      License, or (at your option) any later version.

      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Affero General Public License for more details.

      You should have received a copy of the GNU Affero General Public License
      along with this program.  If not, see <https://www.gnu.org/licenses/agpl.html>.
*/

/////////////////////////////////
//////// Jquery Stuff ///////////
/////////////////////////////////

// Remove GeoNode artifact
$(".span12").remove();


$(function() {
    $("#vulnAccordion").accordion({
        collapsible: true,
        heightStyle: "content"
    });
});

/////////////////////////////////
////// Vulnerability Information ////
/////////////////////////////////
// the json to be expected from the other app

//Test20_VF_Analytical_Discrete_Simplest
//var jsonObj = {"pk": 11, "model": "vulnerability.generalinformation", "fields": {"category": "Structure specific", "article_title": "CURVAS DE VULNERABILIDAD PARA ESTRUCTURAS DE PO\u0301RTICOS DE HORMIGO\u0301N ARMADO CON PAREDES DE MAMPOSTERIA", "name": "Test20_VF_Analytical_Discrete_Simplest", "publication_conference_name": "Revista Nacional de ingenier\u00eda S\u00edsmica del Per\u00fa", "llrs": null, "material": null, "year": 2004, "web_link": "", "general_comments": "This is an example about GEM global vulnerability database.\r\nThe idea is to test the graphical user interface for a Discrete Vulnerability Function using the minimum information required in the platform", "geo_applicability": {"pk": 11, "model": "vulnerability.geoapplicability", "fields": {"general_information": 11, "countries": [{"pk": 135, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Peru", "iso3": "PER"}}], "area": "", "lon": null, "address": "", "lat": null}}, "authors": "Agudelo-C & Lopez-Rodriguez", "use_case_information": "", "structure_type": "Building", "taxonomy_gem": "C1L", "type_of_assessment": "Vulnerability", "taxonomy_type": {"pk": 2, "model": "vulnerability.taxonomytype", "fields": {"user_def": false, "name": "PAGER"}}, "taxonomy_text": "C1L", "vulnerability_func": {"pk": 1, "model": "vulnerability.vulnerabilityfunc", "fields": {"general_information": 11, "predictor_var": {"pk": 12, "model": "vulnerability.predictorvar", "fields": {"type_of_period": "Tinelastic (s)", "intensity_measure_type": "Sa(T)", "minimum_im": null, "fragility_func": null, "period": 0.68, "vulnerability_func": 1, "maximum_im": null, "intensity_measure_unit": "m/s^2"}}, "func_distr_vuln_discr": {"pk": 1, "model": "vulnerability.funcdistrvulndiscr", "fields": {"predictor_var_im_val": "0.250;0.500;0.750", "resp_var_val_coeff": "", "vulnerability_func": 1, "resp_var_mean_val": ".000;0.001;0.006", "data_pts_num": 3}}, "method_of_estimation": "Analytical", "func_distr_type": "Discrete", "resp_var": "Damage factor"}}}};

//Test21_VF_Analytical_Discrete_Complete
//var jsonObj = {"pk": 12, "model": "vulnerability.generalinformation", "fields": {"category": "Structure specific", "article_title": "CURVAS DE VULNERABILIDAD PARA ESTRUCTURAS DE PO\u0301RTICOS DE HORMIGO\u0301N ARMADO CON PAREDES DE MAMPOSTERIA", "name": "Test21_VF_Analytical_Discrete_Complete", "publication_conference_name": "Revista Nacional de ingenier\u00eda S\u00edsmica del Per\u00fa", "llrs": null, "material": null, "year": 2004, "web_link": "", "general_comments": "This is an example about GEM global vulnerability database.\r\nThe idea is to test the graphical user interface for a Discrete Vulnerability Function using the minimum information required in the platform", "geo_applicability": {"pk": 12, "model": "vulnerability.geoapplicability", "fields": {"general_information": 12, "countries": [{"pk": 36, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Chile", "iso3": "CHL"}}, {"pk": 134, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Paraguay", "iso3": "PRY"}}, {"pk": 38, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Colombia", "iso3": "COL"}}, {"pk": 135, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Peru", "iso3": "PER"}}, {"pk": 8, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Argentina", "iso3": "ARG"}}, {"pk": 74, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Guyana", "iso3": "GUY"}}, {"pk": 207, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "French Guiana", "iso3": "GUF"}}, {"pk": 51, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Ecuador", "iso3": "ECU"}}, {"pk": 22, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Bolivia", "iso3": "BOL"}}, {"pk": 25, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Brazil", "iso3": "BRA"}}, {"pk": 187, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Uruguay", "iso3": "URY"}}, {"pk": 190, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Venezuela", "iso3": "VEN"}}, {"pk": 166, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Suriname", "iso3": "SUR"}}], "area": "", "lon": null, "address": "", "lat": null}}, "authors": "Agudelo-C & Lopez-Rodriguez", "use_case_information": "", "structure_type": "Building", "taxonomy_gem": "UFB, UFB1, UFB3, DS1, DS5", "type_of_assessment": "Vulnerability", "taxonomy_type": {"pk": 2, "model": "vulnerability.taxonomytype", "fields": {"user_def": false, "name": "PAGER"}}, "taxonomy_text": "UFB, UFB1, UFB3, DS1, DS5", "vulnerability_func": {"pk": 2, "model": "vulnerability.vulnerabilityfunc", "fields": {"analytical_model_info": {"pk": 8, "model": "vulnerability.analyticalmodelinfo", "fields": {"evaluation_of_im": 2, "capacity_curve_func": null, "fragility_func": null, "model_type": "3D", "vulnerability_func": 2, "analysis_type": {"pk": 3, "model": "vulnerability.analysistype", "fields": {"user_def": false, "name": "NLS without dispersion"}}, "method_uncert_propag": "Set of index buildings", "models_num": 10}}, "general_information": 12, "predictor_var": {"pk": 13, "model": "vulnerability.predictorvar", "fields": {"type_of_period": null, "intensity_measure_type": "PGA", "minimum_im": null, "fragility_func": null, "period": null, "vulnerability_func": 2, "maximum_im": 10.0, "intensity_measure_unit": "m/s^2"}}, "func_distr_vuln_discr": {"pk": 2, "model": "vulnerability.funcdistrvulndiscr", "fields": {"predictor_var_im_val": "0.250;0.500;0.750;1.000;1.250;1.500;1.750;2.000;2.250;2.500;2.750;3.000;3.250;3.500;3.750;4.000;4.250;4.500;4.750;5.000;5.250;5.500;5.750;6.000;6.250;6.500;6.750;7.000;7.250;7.500;7.750;8.000;8.250;8.500;8.750;9.000;9.250;9.500;9.750;10.000;10.250;10.500;10.750;11.000;11.250", "resp_var_val_coeff": "1.5000;1.4999;1.4965;1.4625;1.3221;0.9704;0.3258;0.3915;0.3748;0.3550;0.3332;0.3103;0.2872;0.2644;0.2425;0.2217;0.2023;0.1843;0.1678;0.1527;0.1390;0.1267;0.1155;0.1054;0.0964;0.0883;0.0811;0.0747;0.0689;0.0637;0.0591;0.0550;0.0514;0.0481;0.0452;0.0426;0.0403;0.0355;0.0319;0.0287;0.0258;0.0232;0.0209;0.0188;0.0170", "vulnerability_func": 2, "resp_var_mean_val": "0.000;0.000;0.000;0.001;0.006;0.018;0.039;0.071;0.113;0.162;0.217;0.274;0.332;0.389;0.444;0.496;0.544;0.589;0.630;0.668;0.702;0.733;0.761;0.786;0.809;0.829;0.847;0.863;0.878;0.891;0.902;0.912;0.922;0.930;0.937;0.944;0.949;0.954;0.959;0.963;0.967;0.970;0.973;0.976;0.978", "data_pts_num": 45}}, "method_of_estimation": "Analytical", "func_distr_type": "Discrete", "resp_var": "Damage factor", "stat_info": {"pk": 7, "model": "vulnerability.statisticalinformation", "fields": {"stat_model": {"pk": 2, "model": "vulnerability.statmodel", "fields": {"user_def": false, "name": "Generalised Additive Models"}}, "fit_assessment_goodness": null, "fragility_func": null, "stat_model_fitting_method": {"pk": 1, "model": "vulnerability.statmodelfittingmethod", "fields": {"user_def": false, "name": "Least squares"}}, "vulnerability_func": 2, "proc_constr_pred_int": null, "model_fitting_method_assumptions": 3, "proc_constr_conf_int": {"pk": 3, "model": "vulnerability.procconstrint", "fields": {"user_def": false, "name": "Bayesian"}}}}, "qrs_analytical": {"pk": 6, "model": "vulnerability.qrsanalytical", "fields": {"structural_details": "Marginal", "documentation_quality": null, "hazard_model": "Superior", "model_completeness": "Marginal", "documentation_type": null, "fragility_func": null, "sampling_method": null, "site_specific": "NA", "vulnerability_func": 2, "limit_states_def": "Average", "seismic_demand": "Average", "analysis_type": null, "typology_repr": "Marginal", "uncertainties_treatment": "Marginal", "cross_validation": "NA"}}}}}};

//Test22_VF_Empirical_Discrete_Simplest
//var jsonObj = {"pk": 14, "model": "vulnerability.generalinformation", "fields": {"category": "Structure specific", "article_title": "CURVAS DE VULNERABILIDAD PARA ESTRUCTURAS DE PO\u0301RTICOS DE HORMIGO\u0301N ARMADO CON PAREDES DE MAMPOSTERIA", "name": "Test22_VF_Empirical_Discrete_Simplest", "publication_conference_name": "Revista Nacional de ingenier\u00eda S\u00edsmica del Per\u00fa", "llrs": null, "material": null, "year": 2004, "web_link": "", "general_comments": "This is an example about GEM global vulnerability database.\r\nThe idea is to test the graphical user interface for a Discrete Vulnerability Function using the minimum information required in the platform", "geo_applicability": {"pk": 14, "model": "vulnerability.geoapplicability", "fields": {"general_information": 14, "countries": [{"pk": 38, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Colombia", "iso3": "COL"}}, {"pk": 51, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Ecuador", "iso3": "ECU"}}, {"pk": 135, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Peru", "iso3": "PER"}}], "area": "", "lon": null, "address": "", "lat": null}}, "authors": "Agudelo-C & Lopez-Rodriguez", "use_case_information": "", "structure_type": "Building", "taxonomy_gem": "", "type_of_assessment": "Vulnerability", "taxonomy_type": {"pk": 2, "model": "vulnerability.taxonomytype", "fields": {"user_def": false, "name": "PAGER"}}, "taxonomy_text": "", "vulnerability_func": {"pk": 4, "model": "vulnerability.vulnerabilityfunc", "fields": {"general_information": 14, "predictor_var": {"pk": 15, "model": "vulnerability.predictorvar", "fields": {"type_of_period": null, "intensity_measure_type": "PGV", "minimum_im": null, "fragility_func": null, "period": null, "vulnerability_func": 4, "maximum_im": null, "intensity_measure_unit": "g"}}, "func_distr_vuln_discr": {"pk": 4, "model": "vulnerability.funcdistrvulndiscr", "fields": {"predictor_var_im_val": "1.0;2.5;5.0;7.5;10.0;12.5;15.0;17.5;20.0;22.5;25.0;27.5;30.0;32.5;35.0;37.5;40.0;42.5;45.0;47.5;50.0;52.5;55.0;57.5;60.0;62.5;65.0;67.5;70.0;72.5;75.0;77.5;80.0;82.5;85.0;87.5;90.0;92.5;95.0;97.5;100.0;102.5;105.0", "resp_var_val_coeff": "1.4995;1.4702;1.2299;0.7832;0.2395;0.3955;0.3878;0.3801;0.3722;0.3641;0.3557;0.3470;0.3380;0.3286;0.3190;0.3090;0.2988;0.2883;0.2776;0.2668;0.2558;0.2449;0.2339;0.2230;0.2123;0.2017;0.1914;0.1813;0.1716;0.1622;0.1531;0.1445;0.1362;0.1284;0.1209;0.1138;0.1072;0.1009;0.0951;0.0895;0.0844;0.0796;0.0751", "vulnerability_func": 4, "resp_var_mean_val": "0.000;0.001;0.009;0.024;0.042;0.061;0.080;0.100;0.120;0.140;0.161;0.183;0.205;0.228;0.253;0.277;0.303;0.329;0.356;0.383;0.410;0.438;0.465;0.492;0.519;0.546;0.572;0.597;0.621;0.645;0.667;0.689;0.709;0.729;0.748;0.765;0.782;0.798;0.812;0.826;0.839;0.851;0.862", "data_pts_num": 43}}, "method_of_estimation": "Empirical", "func_distr_type": "Discrete", "resp_var": "Damage factor"}}}};

//Test23_VF_Empirical_Discrete_Complete
var jsonObj = {"pk": 17, "model": "vulnerability.generalinformation", "fields": {"category": "Structure specific", "article_title": "CURVAS DE VULNERABILIDAD PARA ESTRUCTURAS DE PO\u0301RTICOS DE HORMIGO\u0301N ARMADO CON PAREDES DE MAMPOSTERIA", "name": "Test23_VF_Empirical_Discrete_Complete", "publication_conference_name": "Revista Nacional de ingenier\u00eda S\u00edsmica del Per\u00fa", "llrs": null, "material": null, "year": 2004, "web_link": "", "general_comments": "This is an example about GEM global vulnerability database.\r\nThe idea is to test the graphical user interface for a Discrete Vulnerability Function using the minimum information required in the platform", "geo_applicability": {"pk": 17, "model": "vulnerability.geoapplicability", "fields": {"general_information": 17, "countries": [{"pk": 51, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Ecuador", "iso3": "ECU"}}, {"pk": 38, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Colombia", "iso3": "COL"}}, {"pk": 135, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 5, "name": "Peru", "iso3": "PER"}}], "area": "", "lon": null, "address": "", "lat": null}}, "authors": "Agudelo-C & Lopez-Rodriguez", "use_case_information": "", "structure_type": "Building", "taxonomy_gem": "UFB3", "type_of_assessment": "Vulnerability", "taxonomy_type": {"pk": 2, "model": "vulnerability.taxonomytype", "fields": {"user_def": false, "name": "PAGER"}}, "taxonomy_text": "UFB3", "vulnerability_func": {"pk": 7, "model": "vulnerability.vulnerabilityfunc", "fields": {"general_information": 17, "empirical_model_info": {"pk": 3, "model": "vulnerability.empiricalmodelinfo", "fields": {"building_aggr_min_num": 20, "fragility_func": null, "building_x_class_num": 50, "empirical_data_src": "Fake data again", "vulnerability_func": 7, "aggr_unit_def": "Bins of IM", "building_aggr": "Grouped", "structural_unit": "Building"}}, "predictor_var": {"pk": 18, "model": "vulnerability.predictorvar", "fields": {"type_of_period": null, "intensity_measure_type": "PGV", "minimum_im": 1.0, "fragility_func": null, "period": null, "vulnerability_func": 7, "maximum_im": 80.0, "intensity_measure_unit": "cm/s"}}, "qrs_empirical": {"pk": 2, "model": "vulnerability.qrsempirical", "fields": {"constrained_categories": "Superior", "damage_loss_observation": null, "documentation_type": null, "fragility_func": null, "representativeness": "Superior", "documentation_quality": null, "vulnerability_func": 7, "first_principles": null, "hindcasting": null, "uncertainties_treatment": null, "excitation_observation": "Superior", "cross_validation": null, "data_quantity": null}}, "func_distr_vuln_discr": {"pk": 6, "model": "vulnerability.funcdistrvulndiscr", "fields": {"predictor_var_im_val": "1.0;2.5;5.0;7.5;10.0;12.5;15.0;17.5;20.0;22.5;25.0;27.5;30.0;32.5;35.0;37.5;40.0;42.5;45.0;47.5;50.0;52.5;55.0;57.5;60.0;62.5;65.0;67.5;70.0;72.5;75.0;77.5;80.0;82.5;85.0;87.5;90.0;92.5;95.0;97.5;100.0;102.5;105.0", "resp_var_val_coeff": "1.4995;1.4702;1.2299;0.7832;0.2395;0.3955;0.3878;0.3801;0.3722;0.3641;0.3557;0.3470;0.3380;0.3286;0.3190;0.3090;0.2988;0.2883;0.2776;0.2668;0.2558;0.2449;0.2339;0.2230;0.2123;0.2017;0.1914;0.1813;0.1716;0.1622;0.1531;0.1445;0.1362;0.1284;0.1209;0.1138;0.1072;0.1009;0.0951;0.0895;0.0844;0.0796;0.0751", "vulnerability_func": 7, "resp_var_mean_val": "0.000;0.001;0.009;0.024;0.042;0.061;0.080;0.100;0.120;0.140;0.161;0.183;0.205;0.228;0.253;0.277;0.303;0.329;0.356;0.383;0.410;0.438;0.465;0.492;0.519;0.546;0.572;0.597;0.621;0.645;0.667;0.689;0.709;0.729;0.748;0.765;0.782;0.798;0.812;0.826;0.839;0.851;0.862", "data_pts_num": 43}}, "method_of_estimation": "Empirical", "func_distr_type": "Discrete", "resp_var": "Damage factor", "stat_info": {"pk": 8, "model": "vulnerability.statisticalinformation", "fields": {"stat_model": {"pk": 3, "model": "vulnerability.statmodel", "fields": {"user_def": false, "name": "Kernel smoothing"}}, "fit_assessment_goodness": {"pk": 2, "model": "vulnerability.fitassessmentgoodness", "fields": {"user_def": false, "name": "Acceptable variance function"}}, "fragility_func": null, "stat_model_fitting_method": {"pk": 2, "model": "vulnerability.statmodelfittingmethod", "fields": {"user_def": false, "name": "Maximum likelyhood"}}, "vulnerability_func": 7, "proc_constr_pred_int": null, "model_fitting_method_assumptions": null, "proc_constr_conf_int": null}}}}}};

//Test24_VF_Analytical_Continuos_Simplest
//var jsonObj = {"pk": 15, "model": "vulnerability.generalinformation", "fields": {"category": "Structure specific", "article_title": "VULNERABILITY based on the Fragility-based assessment of typical mid-rise and low-rise RC buildings in Turkey", "name": "Test24_VF_Analytical_Continuos_Simplest", "publication_conference_name": "Engineering Structures 30(5), 1360-1374", "llrs": null, "material": null, "year": 2008, "web_link": "http://mceer.buffalo.edu/publications/resaccom/99-sp01/ch10mand.pdf", "general_comments": "RC structures-low rise-bare frame\r\nSample Data. Buildings: 28 RC buildings (bare, infilled, low-rise and mid-rise) constructed between 1973 and 1999 extracted from a building database of approximately 500 buildings in Duzce. Number of stories of the selected buildings ranges from 2 to 6.\r\nSeismic hazard: 100 recorded accelerograms from different parts of the world.\r\nStructural variability is taken into account by considering the structural input parameters (period T and strength ratio h) as random variables, and ground motion uncertainty is taken into account by selecting a set of records with different characteristics.\r\nReference fragility curves are generated for different classes of reinforced concrete structures. Furthermore, the sensitivity of the parameters and techniques involved in the generation process are investigated: the effect of post-yield to initial stiffness ratio variability (negligible), sampling technique (negligible), sample size (negligible), limit state variability (significant), degrading hysteretic behaviour (significant). ", "geo_applicability": {"pk": 15, "model": "vulnerability.geoapplicability", "fields": {"general_information": 15, "countries": [{"pk": 181, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 6, "name": "Turkey", "iso3": "TUR"}}], "area": "", "lon": null, "address": "", "lat": null}}, "authors": "M. A. Erberik", "use_case_information": "", "structure_type": "Building", "taxonomy_gem": "C1L, C3L", "type_of_assessment": "Vulnerability", "taxonomy_type": {"pk": 2, "model": "vulnerability.taxonomytype", "fields": {"user_def": false, "name": "PAGER"}}, "taxonomy_text": "C1L, C3L", "vulnerability_func": {"pk": 5, "model": "vulnerability.vulnerabilityfunc", "fields": {"general_information": 15, "stat_info": {"pk": 5, "model": "vulnerability.statisticalinformation", "fields": {"stat_model": null, "fit_assessment_goodness": null, "fragility_func": null, "stat_model_fitting_method": null, "vulnerability_func": 5, "proc_constr_pred_int": null, "model_fitting_method_assumptions": null, "proc_constr_conf_int": null}}, "predictor_var": {"pk": 16, "model": "vulnerability.predictorvar", "fields": {"type_of_period": null, "intensity_measure_type": "PGV", "minimum_im": null, "fragility_func": null, "period": null, "vulnerability_func": 5, "maximum_im": null, "intensity_measure_unit": "cm/s"}}, "method_of_estimation": "Analytical", "func_distr_type": "Continuous", "resp_var": "Direct economic factor", "func_distr_vuln_cont": {"pk": 1, "model": "vulnerability.funcdistrvulncont", "fields": {"func_distr_shape": {"pk": 1, "model": "vulnerability.funcdistrshape", "fields": {"user_def": false, "name": "Lognormal"}}, "discretization_data_pts_num": null, "std_dev": 12.346, "vulnerability_func": 5, "mean": 68.79}}}}}};

//Test25_VF_Analytical_Continuos_Complete
//var jsonObj = {"pk": 16, "model": "vulnerability.generalinformation", "fields": {"category": "Structure specific", "article_title": "VULNERABILITY based on the Fragility-based assessment of typical mid-rise and low-rise RC buildings in Turkey", "name": "Test25_VF_Analytical_Continuos_Complete", "publication_conference_name": "Engineering Structures 30(5), 1360-1374", "llrs": null, "material": null, "year": 2008, "web_link": "http://mceer.buffalo.edu/publications/resaccom/99-sp01/ch10mand.pdf", "general_comments": "RC structures-low rise-bare frame\r\nSample Data. Buildings: 28 RC buildings (bare, infilled, low-rise and mid-rise) constructed between 1973 and 1999 extracted from a building database of approximately 500 buildings in Duzce. Number of stories of the selected buildings ranges from 2 to 6.\r\nSeismic hazard: 100 recorded accelerograms from different parts of the world.\r\nStructural variability is taken into account by considering the structural input parameters (period T and strength ratio h) as random variables, and ground motion uncertainty is taken into account by selecting a set of records with different characteristics.\r\n", "geo_applicability": {"pk": 16, "model": "vulnerability.geoapplicability", "fields": {"general_information": 16, "countries": [{"pk": 181, "model": "vulnerability.country", "fields": {"is_visible": true, "region": 6, "name": "Turkey", "iso3": "TUR"}}], "area": "", "lon": null, "address": "", "lat": null}}, "authors": "M. A. Erberik", "use_case_information": "Reference fragility curves are generated for different classes of reinforced concrete structures. Furthermore, the sensitivity of the parameters and techniques involved in the generation process are investigated: the effect of post-yield to initial stiffness ratio variability (negligible), sampling technique (negligible), sample size (negligible), limit state variability (significant), degrading hysteretic behaviour (significant). ", "structure_type": "Building", "taxonomy_gem": "C1L, C3L", "type_of_assessment": "Vulnerability", "taxonomy_type": {"pk": 2, "model": "vulnerability.taxonomytype", "fields": {"user_def": false, "name": "PAGER"}}, "taxonomy_text": "C1L, C3L", "vulnerability_func": {"pk": 6, "model": "vulnerability.vulnerabilityfunc", "fields": {"analytical_model_info": {"pk": 7, "model": "vulnerability.analyticalmodelinfo", "fields": {"evaluation_of_im": 3, "capacity_curve_func": null, "fragility_func": null, "model_type": "2D element-by-element", "vulnerability_func": 6, "analysis_type": {"pk": 1, "model": "vulnerability.analysistype", "fields": {"user_def": false, "name": "Nonlinear dynamic analysis (NLD)"}}, "method_uncert_propag": "Random Monte-Carlo or Latin Hypercube sampling", "models_num": null}}, "general_information": 16, "stat_info": {"pk": 6, "model": "vulnerability.statisticalinformation", "fields": {"stat_model": {"pk": 3, "model": "vulnerability.statmodel", "fields": {"user_def": false, "name": "Kernel smoothing"}}, "fit_assessment_goodness": {"pk": 1, "model": "vulnerability.fitassessmentgoodness", "fields": {"user_def": false, "name": "Acceptable mean function"}}, "fragility_func": null, "stat_model_fitting_method": {"pk": 2, "model": "vulnerability.statmodelfittingmethod", "fields": {"user_def": false, "name": "Maximum likelyhood"}}, "vulnerability_func": 6, "proc_constr_pred_int": {"pk": 3, "model": "vulnerability.procconstrint", "fields": {"user_def": false, "name": "Bayesian"}}, "model_fitting_method_assumptions": 2, "proc_constr_conf_int": {"pk": 2, "model": "vulnerability.procconstrint", "fields": {"user_def": false, "name": "Bootstrap"}}}}, "predictor_var": {"pk": 17, "model": "vulnerability.predictorvar", "fields": {"type_of_period": null, "intensity_measure_type": "PGV", "minimum_im": null, "fragility_func": null, "period": null, "vulnerability_func": 6, "maximum_im": null, "intensity_measure_unit": "cm/s"}}, "method_of_estimation": "Analytical", "func_distr_type": "Continuous", "resp_var": "Damage factor", "func_distr_vuln_cont": {"pk": 2, "model": "vulnerability.funcdistrvulncont", "fields": {"func_distr_shape": {"pk": 1, "model": "vulnerability.funcdistrshape", "fields": {"user_def": false, "name": "Lognormal"}}, "discretization_data_pts_num": 50, "std_dev": 12.346, "vulnerability_func": 6, "mean": 68.79}}, "qrs_analytical": {"pk": 5, "model": "vulnerability.qrsanalytical", "fields": {"structural_details": "Average", "documentation_quality": "Average", "hazard_model": "NA", "model_completeness": "Average", "documentation_type": "Superior", "fragility_func": null, "sampling_method": "Superior", "site_specific": "Average", "vulnerability_func": 6, "limit_states_def": "Average", "seismic_demand": "Average", "analysis_type": "Superior", "typology_repr": "Average", "uncertainties_treatment": "Marginal", "cross_validation": "Average"}}}}}};


/////////////////////////////////
/// Create Vulnerability Metadata ///
/////////////////////////////////

var vulnName = jsonObj.fields.name;
var category = jsonObj.fields.category;
var typeOfAssessment = jsonObj.fields.type_of_assessment;
var dlName = jsonObj.fields.name;
var taxText = jsonObj.fields.taxonomy_text;
var taxType = jsonObj.fields.taxonomy_type.fields.name
var publication = jsonObj.fields.publication_conference_name;
var articleTitle = jsonObj.fields.article_title;
var authors = jsonObj.fields.authors;
var generalComments = jsonObj.fields.general_comments;
var year = jsonObj.fields.year;
var useCase = jsonObj.fields.use_case_information;
var funcDistrType = jsonObj.fields.vulnerability_func.fields.func_distr_type;
var countriesArray = [];
/*
var geoApp = jsonObj.fields.geo_applicability.fields.countries;

for (var i = geoApp.length - 1; i >= 0; i--) {
    var tmp = " "+geoApp[i].fields.name;
    countriesArray.push(tmp);
};
*/

if (funcDistrType == "Discrete") {
    var analysisType = jsonObj.fields.vulnerability_func.fields.name;
    if (jsonObj.fields.vulnerability_func.fields.analytical_model_info != undefined) {
        var methodUncertPropag = jsonObj.fields.vulnerability_func.fields.analytical_model_info.fields.method_uncert_propag;
        var modelsNum = jsonObj.fields.vulnerability_func.fields.analytical_model_info.fields.models_num;
        var modelType = jsonObj.fields.vulnerability_func.fields.analytical_model_info.fields.model_type;
    };
};

// General info
if (typeOfAssessment != undefined && typeOfAssessment != "") {
    $("#genInfo").append('<p><b>Assessment Type: </b>'+typeOfAssessment+'</p>');
};

if (vulnName != undefined && vulnName != "") {
    $("#genInfo").append('<p><b>Name: </b>'+vulnName+'</p>');
};

if (category != undefined && category != "") {
    $("#genInfo").append('<p><b>Category: </b>'+category+'</p>');
};

if (taxType != undefined && taxType != "") {
    $("#genInfo").append('<p><b>Taxonomy: </b>'+taxText+' ('+taxType+')</p>');
};

if (articleTitle != undefined && articleTitle != "") {
    $("#genInfo").append('<p><b>Reference: </b>'+articleTitle+' ('+authors+', '+year+') - '+publication+'</p>');
};

if (countriesArray.length > 0) {
    $("#genInfo").append('<p><b>Geographical Applicability: </b>'+countriesArray+'</p>');   
};

if (generalComments != undefined && generalComments != "") {
    $("#genInfo").append('<p><b>General Comments: </b>'+generalComments+'</p>');
};

if (useCase != undefined && useCase != "") {
    $("#genInfo").append('<p><b>Use Case Information: </b>'+useCase+'</p>');
};

// Modelling info
if (analysisType != undefined && analysisType != "") {
    $("#modellingInfo").append('<p><b>Analysis Type: </b>'+analysisType+'</p>');
}
if (modelType != undefined && modelType != "") {
    $("#modellingInfo").append('<p><b>Model Type: </b>'+modelType+'</p>');
};
if (methodUncertPropag != undefined && methodUncertPropag != "") {
    $("#modellingInfo").append('<p><b>Method of Uncertainty Propagation: </b>'+methodUncertPropag+'</p>');
};
if (modelsNum != undefined && modelsNum != "") {
    $("#modellingInfo").append('<p><b>Number of Distinct Structural Models Analysed: </b>'+modelsNum+'</p>');
};

// Statistical Information
if (jsonObj.fields.vulnerability_func.fields.stat_info != undefined) {
    
    if (jsonObj.fields.vulnerability_func.fields.stat_info.fields.stat_model != undefined && jsonObj.fields.vulnerability_func.fields.stat_info.fields.stat_model != null) {
        var statModel = jsonObj.fields.vulnerability_func.fields.stat_info.fields.stat_model.fields.name;
        $("#statInfo").append('<p><b>Statistical Model: </b>'+statModel+'</p>');
    };

    if (jsonObj.fields.vulnerability_func.fields.stat_info.fields.stat_model_fitting_method != undefined) {
        var statModelFittingMethod = jsonObj.fields.vulnerability_func.fields.stat_info.fields.stat_model_fitting_method.fields.name;
        $("#statInfo").append('<p><b>Statistical model fitting method: </b>'+statModelFittingMethod+'</p>');
        var fitAssessmentGoodness = jsonObj.fields.vulnerability_func.fields.stat_info.fields.stat_model_fitting_method.fields.name;
        $("#statInfo").append('<p><b>Goodness of fit assessment (GLM/GAM): </b>'+fitAssessmentGoodness+'</p>');
    };
    
    var modelFittingMethodAssumptions = jsonObj.fields.vulnerability_func.fields.stat_info.fields.model_fitting_method_assumptions;
    if (modelFittingMethodAssumptions != undefined && modelFittingMethodAssumptions != "") {
        $("#statInfo").append('<p><b>Model Fitting Method Assumption: </b>'+modelFittingMethodAssumptions+'</p>');
    };
    
    if (jsonObj.fields.vulnerability_func.fields.stat_info.fields.proc_constr_conf_int != undefined) {
        var procConstrPredInt = jsonObj.fields.vulnerability_func.fields.stat_info.fields.proc_constr_conf_int.fields.name;
        $("#statInfo").append('<p><b>Procedure for the Construction of Prediction Intervals: </b>'+procConstrPredInt+'</p>');
    };
};

// Quality Information
//TODO add quality info

/////////////////////////////////////////////
/// Create Discrete Vulnerability Curves ////
/////////////////////////////////////////////

if (funcDistrType == "Discrete") {

    var coeffArray = jsonObj.fields.vulnerability_func.fields.func_distr_vuln_discr.fields.resp_var_val_coeff;

    if (coeffArray != "" && coeffArray != undefined) {
        coeffArray = coeffArray.split(";");
        for (var i = 0; i < coeffArray.length; i++)
            coeffArray[i] = coeffArray[i].trim();
        for (var i = 0; i < coeffArray.length; i++) {
            coeffArray[i] = parseFloat(coeffArray[i]);
        };
    };

    var predVal = jsonObj.fields.vulnerability_func.fields.func_distr_vuln_discr.fields.predictor_var_im_val;
    predVal = predVal.split(";");
    for (var i = 0; i < predVal.length; i++)
        predVal[i] = predVal[i].trim();
    for (var i = 0; i < predVal.length; i++) {
        predVal[i] = parseFloat(predVal[i]);
    };
    
    var respMean = jsonObj.fields.vulnerability_func.fields.func_distr_vuln_discr.fields.resp_var_mean_val;
    respMean = respMean.split(";");
    for (var i = 0; i < respMean.length; i++)
        respMean[i] = respMean[i].trim();
    for (var i = 0; i < respMean.length; i++) {
        respMean[i] = parseFloat(respMean[i]);

    };
    
    var chartData = [];

    if (coeffArray != "" && coeffArray != undefined) {
        for (var i = 0; i < respMean.length; i++) {
            chartData.push([predVal[i], respMean[i], coeffArray[i]]);
        };
    } else {
        for (var i = 0; i < respMean.length; i++) {
            chartData.push([predVal[i], respMean[i]]);
        };
    };
    
    buildMixedD3Chart(chartData);


//////////////////////////////////////////////
///// Discrete Vulnerability Data Table //////
//////////////////////////////////////////////

    $(document).ready(function() {
        var aaData = [];
            
        for (var i = 0; i < respMean.length; i++) {
            var tmp = [];
            tmp.push(predVal[i]);
            tmp.push(respMean[i]);
            aaData.push(tmp);
        };
    
        $('#vulnerability-table').dataTable({
            "aaData": aaData,
            "aoColumns": [
                {"sTitle": "PGA (g)"},
                {"sTitle": "Loss Ratio"}
            ],
            "bLengthChange": false,
            "bFilter": false
        });
    });

///////////////////////////////////////////////
/// Create Continuous Vulnerability Curves ////
///////////////////////////////////////////////

} else if (funcDistrType == "Continuous") {

    // Get values out of JSON
    var dataObj = [];
    var chartData = [];
    var iml = [];
    var mean = jsonObj.fields.vulnerability_func.fields.func_distr_vuln_cont.fields.mean;
    var stddev = jsonObj.fields.vulnerability_func.fields.func_distr_vuln_cont.fields.std_dev;
    var min = jsonObj.fields.vulnerability_func.fields.predictor_var.fields.minimum_im;
    
    if (jsonObj.fields.vulnerability_func.fields.predictor_var.fields.maximum_im == undefined) {
        var max = (2 * mean);
    } else {
        var max = jsonObj.fields.vulnerability_func.fields.predictor_var.fields.maximum_im;
    };

    //var imtTitle = jsonObj.fields.vulnerability_func.fields.predictor_var.fields.intensity_measure_type;
    var imTitle = "temp title"
    var inc = ((max - min) / 100);

    // create the x axis values
    for(var i=min; i<max;i=i+inc) {
        iml.push(Math.round(i*1000) / 1000);
    }
    iml.push(max);

    var tmp = makeFragilityFunctionContinuous(mean, stddev);

    for (var j = 0; j < iml.length; j++) {
        var val = tmp(iml[j]);
        dataObj.push([iml[j], val]);
    };
    
    // create the x axis values
    for(var i=min; i<max;i=i+inc) {
        iml.push(Math.round(i*1000) / 1000);
    }
    iml.push(max);
    
    function normalCumulativeProbability(z) {
        var b1 = 0.31938153;
        var b2 = -0.356563782;
        var b3 = 1.781477937;
        var b4 = -1.821255978;
        var b5 = 1.330274429;
        var p = 0.2316419;
        var c2 = 0.3989423;
        if (z > 6.0){
            return 1.0};  // this guards against overflow
        if (z < -6.0){
            return 0.0};
        var a = Math.abs(z);
        var t = 1.0 / (1.0 + a * p);
        var b = c2 * Math.exp((-z)*(z / 2.0));
        var n = ((((b5 * t + b4) * t + b3) * t + b2) * t + b1) * t;
        var n = 1.0 - b * n;
        if (z < 0.0){
            n = 1.0 - n};
        return n;
    };
    
    function makeFragilityFunctionContinuous(mean, stddev) {
        var variance = stddev * stddev;
        var sigma = Math.sqrt(Math.log((variance / (mean * mean)) + 1.0));
    
        mu = (mean * mean) / Math.sqrt(variance + mean * mean);
    
        return function(iml) {
           return normalCumulativeProbability((Math.log(iml / mu)) / sigma);
        };
    };
    
    function capitalize(str) {
        return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
    }
    
    //continuousTable();
    buildMixedD3Chart(dataObj);

////////////////////////////////////////////////
///// Continuous Vulnerability Data Table //////
////////////////////////////////////////////////

    $(document).ready(function() {
        var aaData = [];

        for (var i = dataObj.length - 1; i >= 0; i--) {
            
            for (var j = dataObj[i].length - 1; j >= 0; j--) {
                var tmp = [dataObj[i][0], Math.round(dataObj[i][1] * 10000) / 10000];
                aaData.push(tmp);
            };
        };
        
        $('#vulnerability-table').dataTable({
            "aaData": aaData,
            "aoColumns": [
                {"sTitle": "PGA (g)"},
                {"sTitle": "Loss Ratio"}
            ],
            "bLengthChange": false,
            "bFilter": false
        });
    });
};

//////////////////////////////////////
/////// Vulnerability Chart //////////
//////////////////////////////////////

function buildMixedD3Chart(chartData) {

    console.log("chartData");
    console.log(chartData);

    if (funcDistrType == "Continuous") {
        predVal = iml;
        respMean = mean;
    }

    // grid line functions
    function make_x_axis() {        
        return d3.svg.axis()
            .scale(x_scale)
            .orient("bottom")
            .ticks(5)
    }
    function make_y_axis() {        
        return d3.svg.axis()
            .scale(y_scale)
            .orient("left")
            .ticks(5)
    }
    function capitalise(string) {
        return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
    }
    function makeCircles(data) {
        // Points along the line
        svg.selectAll("circle.line")
            .data(data)
            .enter().append("circle")
            .attr("class", "line")
            .attr("cx", function(d) { return x_scale(d[0]); })
            .attr("cy", function(d) { return y_scale(d[1]); })
            .attr("r", 2.5)
            .style("fill", "blue")
            .style("opacity", 1)
            .on("mouseover", function() {
                d3.select(this)
                    .attr('r', 6)
                    .text(circleX + ", " + circleY)
                    .style("fill", "blue")
                    .style("opacity", 1)
                var circleX = d3.select(this.__data__[0]);
                circleX = circleX.toString();
                circleX = circleX.split(","[0]);

                if (coeffArray != "" && coeffArray != undefined) {
                    var cov = this.__data__[2] // coefficient
                };
                var circleY = d3.select(this.__data__[1]);
                circleY = circleY.toString();
                circleY = circleY.split(","[0]);

                textTop.text("Point value (x/y): " + Math.round(circleX * 1000) / 1000 + ", " + Math.round(circleY * 1000) / 1000 + " COV: "+cov);

            }).on("mouseout", function() {
                d3.select(this)
                    .attr('r', 2.5)
                    .style("opacity", 1)
                    .style("fill", "blue");
            });
    }
    var margin = {top: 55, right: 100, bottom: 80, left: 60},
    width = 480 - margin.left - margin.right,
    height = 440 - margin.top - margin.bottom;

    formatter = d3.format(".0%");

    var x_scale = d3.scale.linear().range([0, width]).domain([d3.min(predVal), d3.max(predVal)]);
    // TODO allow the chart to peek at 110 if values dictate
    var y_scale = d3.scale.linear().range([0, height]).domain([1, 0]);
    var xAxis = d3.svg.axis()
        .scale(x_scale)
        .tickFormat(function (d) { return d; })
        .orient("bottom");
    var yAxis = d3.svg.axis()
        .scale(y_scale)
        .orient("left")
        .tickFormat(formatter);
    var line = d3.svg.line()
        .x(function(d) {
            return x_scale(d[0]); 
        })
        .y(function(d) {
            return y_scale(d[1]); 
        });
    var svg = d3.select("#vulnerabilityChart").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    // grid lines
    svg.append("g")         
        .attr("class", "grid")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis()
            .tickSize(-height, 0, 0)
            .tickFormat("")
        );

    svg.append("g")         
        .attr("class", "grid")
        .call(make_y_axis()
            .tickSize(-width, 0, 0)
            .tickFormat("")
        );
    var legend = d3.select("#chartDialog").append("svg")
        .attr("height", 25);
    var count = 0;

    svg.append("path")
        .data([chartData])
        .attr("class", "line")
        .attr()
        .attr("d", line);
        
    var data = chartData;

    if (funcDistrType == "Discrete") {
        makeCircles(data);
    }
   
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .append("text")
        .attr("x", 160)
        .attr("y", 30)
        .attr("dy", ".71em")
        .attr("text-anchor", "middle")
        .style("font-weight", "bold")
        .attr("font-size","14px")
        .text("PGA (g)");
        
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", -60)
        .attr("x", -100)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .style("font-weight", "bold")
        .attr("font-size","14px")
        .text("Loss Ratio (%)");

    textTopLable = svg.append("text")
        .attr("x", 0)
        .attr("y", -35)
        .attr("dy", ".35em")
        .style("font-weight", "bold")
        .attr("font-size","14px")
        .text(typeOfAssessment +' '+ vulnName);
        
    textTop = svg.append("text")
        .attr("x", 0)
        .attr("y", -15)
        .attr("dy", ".35em")
        .text("");
} // End Chart


